<?xml version="1.0" encoding="UTF-8" standalone="no"?><testsuite errors="0" failures="1" name="Login" skipped="0" tests="5" time="1.03" timestamp="2024-05-13 11:14:02"><testcase name="As a user, I can login with valid credentials"/><testcase name="As a user, I cannot login with invalid email"><failure message="1 expectation failed.&#10;Expected status code &lt;400&gt; but was &lt;200&gt;.&#10;" type="java.lang.AssertionError">1 expectation failed.
Expected status code &lt;400&gt; but was &lt;200&gt;.
</failure><system-err>1 expectation failed.
Expected status code &lt;400&gt; but was &lt;200&gt;.

io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)
io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)
io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
starter.products.createProducts.lambda$receiveStatusCode400$1(createProducts.java:61)
net.serenitybdd.rest.SerenityRest.restAssuredThat(SerenityRest.java:626)
starter.products.createProducts.receiveStatusCode400(createProducts.java:61)
starter.stepdefinitions.products.createProductsStep.receiveStatuscode400(createProductsStep.java:30)
</system-err></testcase><testcase name="As a user, I cannot login with invalid password"/><testcase name="As a user, I cannot login with empty inputs"/><testcase name="As a user, I cannot login with unregistered email"/></testsuite>